// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TeamProjectPrimaryCol /> renders a Popup with a truncated project title if it is over 35 characters 1`] = `
<Popup
  content="Test Project Test Project Test Project Test Project"
  disabled={false}
  eventsEnabled={true}
  hideOnScroll={true}
  inverted={true}
  offset={0}
  on={
    Array [
      "hover",
      "focus",
    ]
  }
  pinned={false}
  position="top left"
  size="mini"
  trigger={
    <a
      className="projects_data_title"
      href="/admin/project/video/111/edit"
    >
      <span
        aria-hidden={true}
      >
        Test Project Test Project Test P...
      </span>
      <VisuallyHidden
        el="span"
      >
        Test Project Test Project Test Project Test Project
      </VisuallyHidden>
    </a>
  }
>
  <Portal
    closeOnDocumentClick={true}
    closeOnEscape={true}
    closeOnTriggerBlur={true}
    closeOnTriggerClick={false}
    closeOnTriggerMouseLeave={true}
    eventPool="default"
    mouseEnterDelay={50}
    mouseLeaveDelay={70}
    onClose={[Function]}
    onMount={[Function]}
    onOpen={[Function]}
    onUnmount={[Function]}
    openOnTriggerClick={false}
    openOnTriggerFocus={true}
    openOnTriggerMouseEnter={true}
    trigger={
      <a
        className="projects_data_title"
        href="/admin/project/video/111/edit"
      >
        <span
          aria-hidden={true}
        >
          Test Project Test Project Test P...
        </span>
        <VisuallyHidden
          el="span"
        >
          Test Project Test Project Test Project Test Project
        </VisuallyHidden>
      </a>
    }
    triggerRef={
      Object {
        "current": <a
          class="projects_data_title"
          href="/admin/project/video/111/edit"
        >
          <span
            aria-hidden="true"
          >
            Test Project Test Project Test P...
          </span>
          <span
            class="hide-visually"
          >
            Test Project Test Project Test Project Test Project
          </span>
        </a>,
      }
    }
  >
    <Ref
      innerRef={[Function]}
    >
      <RefFindNode
        innerRef={[Function]}
      >
        <a
          className="projects_data_title"
          href="/admin/project/video/111/edit"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <span
            aria-hidden={true}
          >
            Test Project Test Project Test P...
          </span>
          <VisuallyHidden
            el="span"
          >
            <span
              className="hide-visually"
            >
              Test Project Test Project Test Project Test Project
            </span>
          </VisuallyHidden>
        </a>
      </RefFindNode>
    </Ref>
  </Portal>
</Popup>
`;

exports[`<TeamProjectPrimaryCol /> renders without crashing 1`] = `
<TeamProjectPrimaryCol
  d={
    Object {
      "author": "Jane Doe",
      "createdAt": "May 9, 2019",
      "id": "111",
      "projectTitle": "Test Project",
      "status": "PUBLISHED",
      "thumbnail": Object {
        "alt": "the alt text",
        "url": "https://website.com",
      },
      "updatedAt": "May 9, 2019",
      "visibility": "PUBLIC",
    }
  }
  header={
    Object {
      "label": "PROJECT TITLE",
      "name": "projectTitle",
    }
  }
>
  <div
    className="projects_actions"
  >
    <Checkbox
      checked={false}
      data-label="111"
      disabled={false}
      onChange={[Function]}
      type="checkbox"
    >
      <div
        className="ui fitted checkbox"
        data-label="111"
        onChange={[Function]}
        onClick={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
      >
        <Ref
          innerRef={
            Object {
              "current": <input
                class="hidden"
                readonly=""
                tabindex="0"
                type="checkbox"
                value=""
              />,
            }
          }
        >
          <RefFindNode
            innerRef={
              Object {
                "current": <input
                  class="hidden"
                  readonly=""
                  tabindex="0"
                  type="checkbox"
                  value=""
                />,
              }
            }
          >
            <input
              checked={false}
              className="hidden"
              disabled={false}
              readOnly={true}
              tabIndex={0}
              type="checkbox"
            />
          </RefFindNode>
        </Ref>
        <Ref
          innerRef={
            Object {
              "current": <label />,
            }
          }
        >
          <RefFindNode
            innerRef={
              Object {
                "current": <label />,
              }
            }
          >
            <label />
          </RefFindNode>
        </Ref>
      </div>
    </Checkbox>
  </div>
  <div
    className="projects_thumbnail"
  >
    <div
      className="wrapper"
    >
      <div
        className="placeholder outer"
      >
        <div
          className="placeholder inner"
        />
      </div>
    </div>
  </div>
  <div
    className="projects_data"
  >
    <Link
      as="/admin/project/video/111/edit"
      href="/admin/project?content=video&id=111&action=edit"
      prefetch={false}
    >
      <a
        className="projects_data_title"
        href="/admin/project/video/111/edit"
        onClick={[Function]}
      >
        Test Project
      </a>
    </Link>
    <div
      className="projects_data_actions"
    >
      <div
        className="projects_data_actions_wrapper"
      >
        <Link
          as="/admin/project/video/111/edit"
          href="/admin/project?content=video&id=111&action=edit"
          prefetch={false}
        >
          <a
            className="linkStyle projects_data_actions_action"
            href="/admin/project/video/111/edit"
            onClick={[Function]}
          >
            Edit
          </a>
        </Link>
        <span
          className="separator"
        >
          |
        </span>
        <Modal
          centered={true}
          className="undefined-preview"
          closeIcon={true}
          closeOnDimmerClick={true}
          closeOnDocumentClick={false}
          dimmer={true}
          eventPool="Modal"
          trigger={
            <button
              className="linkStyle projects_data_actions_action"
              type="button"
            >
              Preview
            </button>
          }
        >
          <Portal
            closeOnDocumentClick={false}
            closeOnEscape={true}
            eventPool="Modal"
            mountNode={<body />}
            onClose={[Function]}
            onMount={[Function]}
            onOpen={[Function]}
            onUnmount={[Function]}
            openOnTriggerClick={true}
            trigger={
              <button
                className="linkStyle projects_data_actions_action"
                type="button"
              >
                Preview
              </button>
            }
          >
            <Ref
              innerRef={[Function]}
            >
              <RefFindNode
                innerRef={[Function]}
              >
                <button
                  className="linkStyle projects_data_actions_action"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  type="button"
                >
                  Preview
                </button>
              </RefFindNode>
            </Ref>
          </Portal>
        </Modal>
        <span
          className="separator"
        >
          |
        </span>
        <details-popup
          id="111"
          team="Press Office"
        />
      </div>
      <button
        className="linkStyle projects_data_actions_mobileToggle"
        onClick={[Function]}
        type="button"
      >
        <Icon
          as="i"
          name="ellipsis vertical"
        >
          <i
            aria-hidden="true"
            className="ellipsis vertical icon"
            onClick={[Function]}
          />
        </Icon>
      </button>
    </div>
  </div>
</TeamProjectPrimaryCol>
`;
